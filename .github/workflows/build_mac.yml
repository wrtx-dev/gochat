name: Build macOS App

on:
  workflow_dispatch:
    inputs:
      commit_id:
        description: "tag or branch or commit id(sha1 value)"
        required: true
        type: string
        default: "main"


jobs:
  release:
    name: Build macOS App
    runs-on: macos-latest # We can cross compile but need to be on macOS to notarise
    strategy:
      matrix:
        platform:
          - darwin/amd64
          - darwin/arm64
          - darwin/universal
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: ${{inputs.commit_id}}

      - name: Set platform tag
        id: get_platform
        shell: bash
        run: |
          tag=$(echo ${{ matrix.platform }} | sed -e 's/\//_/g' -e 's/darwin/mac/g' -e 's/amd64/intel/g')
          echo "tag=$tag" >> "$GITHUB_OUTPUT"

      - name: Set version tag
        id: set_app_version
        shell: bash
        run: |
          version=${{ inputs.commit_id }}
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install pnpm
        shell: bash
        run: npm i -g pnpm

      - name: install deps
        shell: bash
        run: pnpm i

      - name: Build 
        shell: bash
        run: |
          pnpm run build:mac


      - name: Rename dmg
        working-directory: ./dist
        run: |
          mv $(ls *.dmg) "GoChat-${{ steps.set_app_version.outputs.version }}_${{ steps.get_platform.outputs.tag }}.dmg"

      - name: "upload"
        uses: actions/upload-artifact@v4
        with:
          name: GoChat-${{ steps.set_app_version.outputs.version }}_${{ steps.get_platform.outputs.tag }}.dmg
          path: |
            ./dist/GoChat-${{ steps.set_app_version.outputs.version }}_${{ steps.get_platform.outputs.tag }}.dmg
